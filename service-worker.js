"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","3a0f10cb11dd77d5d8eeac0eacec1bf9"],["/static/css/main.75185e2a.css","dc70a36c38983b8a7b6a677e303f489d"],["/static/js/main.536b15ca.js","ac2ed632d26617aa8d59b4a777bf840e"],["/static/media/BanklessTimes.dfe12d68.png","dfe12d6858a12d8b5e90a1de8de70a6c"],["/static/media/CoinDesk.1b041462.png","1b041462bc077a6b6ccc9d33f4c94ec7"],["/static/media/Forbes.b9710dc3.png","b9710dc3e09e9cd33a244ae86c1b9654"],["/static/media/HuffPost.91164528.png","91164528a19427ecc2232e04afd2bdd3"],["/static/media/TechStartups.51bc4853.png","51bc4853bec30299b251e3b57624102a"],["/static/media/ben.5b8b6b0d.png","5b8b6b0d30b2f40ad645cca86cbc4425"],["/static/media/chris.4135083e.png","4135083effa67d68be01cadf8f5d2976"],["/static/media/crx.8ec74569.png","8ec745699280e7a214dbd538f76a798e"],["/static/media/facebook.09e83921.svg","09e839219c818f76ee557d4389ef43eb"],["/static/media/fenbushi_logo.ac820105.png","ac8201053e06e2f1f2d3294d42380fec"],["/static/media/greg.ef1d5687.png","ef1d568719febffbe570e75fa0599cd0"],["/static/media/instagram.93334058.svg","93334058cd1dc863368c25ea73e2934d"],["/static/media/intro.228b7008.png","228b70088a37b5b4f1c3434423d0b379"],["/static/media/logo.f3a9bfb6.svg","f3a9bfb684820f4d3a351638dbe787a0"],["/static/media/logo_simple.40602cf4.svg","40602cf47296cc957ff9ababec946015"],["/static/media/performers.930ce75e.svg","930ce75e4244a4e8b74c4ba732650b71"],["/static/media/simar.af8c8a3e.png","af8c8a3eb4800f53655a5794f2c52f07"],["/static/media/solution.1252f2d7.svg","1252f2d717e1f7990bec5a312122c38f"],["/static/media/story.cb1af934.svg","cb1af9349c53b5eeb25b9a76df4c7ec6"],["/static/media/telegram.dd49c919.svg","dd49c919a77f62cde1db4e9409e86922"],["/static/media/twitter.8d18b141.svg","8d18b141f1b5ea6af35ca0da3185b237"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});